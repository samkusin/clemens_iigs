name: Linux All Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: 
      - 'v*'
    paths: 
      - "**"
      - "!.github/**" 
      - ".github/workflows/build-linux.yml"
  pull_request:
    branches: [ 'main' ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Prerequisites
      # Needed for X11 extensions and audio builds
      run: |
        sudo apt-get update
        sudo apt-get install -y libxi-dev libxcursor-dev libasound2-dev mesa-common-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # - name: Test
    #  working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}

    - name: Package Release
      if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_type == 'tag')}}
      run: |
        cd ${{github.workspace}}/build
        cpack --config CPackConfig.cmake

    - name: Archive Release Artifacts
      if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_type == 'tag')}}
      uses: actions/upload-artifact@v3
      with:
        name: clemens_iigs-${{github.ref_name}}-${{runner.os}}
        path: |
          ${{github.workspace}}/build/out/*.deb
          ${{github.workspace}}/build/out/*.sha256
