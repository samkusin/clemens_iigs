name: CMake

on:
  push:
    branches: [ "main", "release-*" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    #- name: Prerequisites
    #  # Needed for X11 extensions and audio builds
    #  run: sudo apt-get install -y libxi-dev libxcursor-dev libasound2-dev mesa-common-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -A x64 -DBUILD_TESTING=OFF

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Archive production artifacts
      if: ${{ github.ref_name == 'release' || github.ref_name == '0.4-prep' }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.ref_name }}
        path: ${{github.workspace}}/build-run/clemens_iigs/Release/*

    # - name: Test
    #  working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}
