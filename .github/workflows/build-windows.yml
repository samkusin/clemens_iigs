name: CMake

on:
  push:
    branches: [ 'main' ]
    tags: ['v*']
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/build-windows.yml"
  pull_request:
    branches: [ 'main' ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build -G "Visual Studio 16 2019" -A x64 -DBUILD_TESTING=OFF -DCMAKE_SYSTEM_VERSION=10.0.18392.0

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   run: ctest -C ${{env.BUILD_TYPE}}

    - name: Package
      if: ${{ github.ref_type == 'tag'}}
      run: |
        cd ${{github.workspace}}/build
        cpack --config CPackConfig.cmake

    - name: Archive production artifacts
      if: ${{ github.ref_type == 'tag'}}
      uses: actions/upload-artifact@v3
      with:
        name: clemens_iigs-${{github.ref_name}}-${{runner.os}}
        path: |
          ${{github.workspace}}/build/out/*.zip
          ${{github.workspace}}/build/out/*.sha256
